version: '2.4'
services:

  #PHP Service
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: php
    container_name: app
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
    ports: 
      - "6001:6001"
      - "8080:8080"
    working_dir: /var/www
    volumes:
      - .:/var/www:delegated
      - ./php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks: 
      - app-network
    depends_on: 
      db:
        condition: service_healthy

  # Nginx Service
  webserver:
    image: nginx:alpine
    container_name: webserver
    restart: unless-stopped
    tty: true
    ports:
      - "8000:80"
      - "443:443"
      - "6002:6001"
    volumes:
      - .:/var/www:delegated
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - app-network

  #MySQL Service
  db:
    image: mysql
    container_name: db
    restart: unless-stopped
    tty: true
    build: 
      context: ./mysql
      dockerfile: Dockerfile
    command: --default-authentication-plugin=mysql_native_password
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: shop
      MYSQL_ALLOW_EMPTY_PASSWORD: 1
      MYSQL_ROOT_PASSWORD: 'love1259'
      MYSQL_USER: 'test'
      MYSQL_PASS: 'pass'
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    # volumes:
    #   - ./mysql:/var/lib/mysql/
    networks:
      - app-network
    healthcheck:
      test: "mysql --user=root --password=love1259 < /mysql/diagram.sql"
      interval: 2s
      timeout: 20s
      retries: 10

#Docker Networks
networks:
  app-network:
    driver: bridge
# #Volumes
volumes:
  mysql:
    driver: local